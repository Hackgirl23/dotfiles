#!/usr/bin/env bash

. ${MY_OWN_BIN_PATH}/_log
. ${MY_OWN_BIN_PATH}/_gather_facts

set -e

TODAY="$(date +%Y%m%d | cut -c 3-)"
LAST_LOGIN_DAY=""
OPERATION_DIR="${MY_OWN_STATE_PATH}/_daily_operation"

if [ -e "${OPERATION_DIR}" ]; then 
  LAST_LOGIN_DAY=$(cat ${OPERATION_DIR}/last_login_date)
fi

if [ "$LAST_LOGIN_DAY" = "$TODAY" ]; then
  # same day. do nothing
  return 0
fi

# daily operation start
log_note "Hello, $USER !"

# dotfile sync
if [ "$(command -v chezmoi)" ] && chezmoi --version > /dev/null 2>&1 \
  && [ "$(ps aux | grep chezmoi | wc -l 2>/dev/null)" == "1" ]; then  # for chezmoi recursive call
  # for reload rc, execute on head.
  nohup chezmoi update > /dev/null 2>&1 < /dev/null &
fi

{{ if and (lookPath "wsl.exe") (lookPath "powershell.exe") -}}
if [ "$(command -v docker)" ] && [ "$(command -v service)" ] ; then
  # WSL: boot docker service
  if service docker status 2>&1 | grep -q "is not running"; then
    nohup service docker start > /dev/null 2>&1 < /dev/null &
  fi
fi
{{ end }}

# create daily working directory
{{ if and (lookPath "wslpath") (lookPath "cmd.exe") -}}
OPERATION_DIR="${WINDOWS_USER_TMP_WSL_PATH}/_daily_operation"  # windos
mkdir -p "${OPERATION_DIR}/${TODAY}"
cmd.exe /c start $(wslpath -w ${OPERATION_DIR}) 2> /dev/null
{{ else -}}
mkdir -p "${OPERATION_DIR}/${TODAY}"
code $_
{{ end }}
# delete old daily operation directory
find "${OPERATION_DIR}/" -type d -mmin +10080 -delete  # 7 day later

# nb: check todo
# nb: create daily report boilerplate

# finalize
echo "$TODAY" > "${MY_OWN_STATE_PATH}/_daily_operation/last_login_date"

