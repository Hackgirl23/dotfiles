#!/bin/sh

#######################################
# get_system
# Arguments:
#   None
# Returns:
#   0 is ok, non-zero on error.
# Outputs:
#   Write systemname("Linux", "Mac", "Windows", "Other") to stdout
# Details:
#   see: https://stackoverflow.com/a/27776822/9982477
#   see: https://github.com/ouch-org/ouch/blob/main/install.sh
#######################################
get_system () {
  case "$(uname -s)" in
    Linux) echo "Linux" ;;
    Darwin) echo "Mac" ;;
    CYGWIN*|MINGW32*|MSYS*|MINGW*) echo "Windows" ;;
    *) echo "Other" ;;
  esac
}

#######################################
# get escalation method(sudo, or su) if needed
# Arguments:
#   None
# Returns:
#   0
# Outputs:
#   Write method("sudo~", "su~", or "") to stdout
# Details:
#   If root, write empty("").
#   If non root, delegate environments (sudo -E).
#######################################
get_escalation_method() {
  if [ "$(whoami)" != "root" ]; then
    if [ -x "$(command -v sudo)" ]; then echo "sudo -S -E"
    elif [ -x "$(command -v su)" ]; then echo "su - -c"; fi
  fi
}

#######################################
# get fetch method(curl, wget) if needed
# Arguments:
#   None
# Returns:
#   0 is ok
#   1 is error, fetch method not found.
# Outputs:
#   Write method("curl~", "wget~") to stdout
#   Write error message to stderr if fetch method not found
# Details:
#   Priority: 1st curl, 2nd wget.
#   Each method will do output result to stdout.
#   Each method will try to retry if needed.
#######################################
get_fetch_method () {
  if [ -x "$(command -v curl)" ];  then echo "curl --silent --retry 3";
  elif [ -x "$(command -v wget)" ];    then echo "wget --quiet --tries=3 -O -";
  else echo "Error: fetch method not found." >&2; return 1;
  fi
}