#!/usr/bin/env bash

# system:
#   /etc/environment : all users/system (reboot required)
#   $SHELLRC($HOME/.bashrc) : now user (source required)
# tool specific:
#   npm : global

. $HOME/.local/bin/my_own/_log
. $HOME/.local/bin/my_own/_gather_facts

# proxy scheme and authority
# https://www.rfc-editor.org/rfc/rfc3986#section-3
HTTP_SCHEME_AUTHORITY="http://proxy:8080"
HTTPS_SCHEME_AUTHORITY="https://proxy:8080"
FTP_SCHEME_AUTHORITY="ftp://proxy:21"
NO_PROXY_HOST="127.0.0.1,localhost,${HOSTNAME}"
# edit flag
EDIT_ETC_ENVIRONMENT=""
EDIT_SHELLRC=""
EDIT_NPM=""

SHELLRC=$HOME/.bashrc
BACKUP_DIR="${XDG_STATE_HOME:-$HOME/.local/state}/my_own/proxy/backup"

INSERT_LABEL="# This section was generated by $HOME/.local/bin/my_own/proxy_switch"


cancel() {
  log_error "proxy_switch: Aborted."
  exit 1
}

trap cancel INT

mkdir -p "$BACKUP_DIR"

if [ $# = 0 ]; then
  log_error "proxy_switch: No args"
  exit 1
elif [ $1 != "on" ] && [ $1 != "off" ]; then
  log_warning "proxy_switch: Invalid arg. set 'on' or 'off'"
  exit 2
else
  log_note "backup dir: $BACKUP_DIR"
  log_note "edit valus:$(cat <<EOF

http_proxy $HTTP_SCHEME_AUTHORITY
https_proxy $HTTPS_SCHEME_AUTHORITY
ftp_proxy $FTP_SCHEME_AUTHORITY
no_proxy $NO_PROXY_HOST
EOF
  )"
  # select files you want to edit
  read -n1 -p "edit /etc/environment? (y/N): " yn; case "$yn" in [yY]*) EDIT_ETC_ENVIRONMENT="true"; echo "," ;; *) echo ", skip";; esac
  read -n1 -p "edit $SHELLRC? (y/N): " yn; case "$yn" in [yY]*) EDIT_SHELLRC="true"; echo "," ;; *) echo ", skip";; esac
  read -n1 -p "edit npm? (y/N): " yn; case "$yn" in [yY]*) EDIT_NPM="true"; echo ",";; *) echo ", skip";; esac

  read -n1 -p "$(log_warning "ok? (y/N): ")" yn; case "$yn" in [yY]*) echo "";; *) exit 1;; esac

  ## backup and delete previous values
  if [ -e "/etc/environment" ] && [ -n "$EDIT_ETC_ENVIRONMENT" ] ; then
    log_note "clear proxy ➔ /etc/environment"
    eval "$(get_escalation_method)" sed -i.bak \
      -e "/proxy_switch/Id" \
      -e "/http_proxy/Id" -e "/HTTP_PROXY/Id" \
      -e "/https_proxy/Id" -e "/HTTPS_PROXY/Id" \
      -e "/ftp_proxy/Id" -e "/FTP_PROXY/Id" \
      -e "/no_proxy/Id" -e "/NO_PROXY/Id" \
      /etc/environment
    eval "$(get_escalation_method)" mv /etc/environment.bak $BACKUP_DIR
    if [ $1 = "on" ]; then
      log_warning "set proxy ➔ /etc/environment"
      eval "$(get_escalation_method)" tee -a /etc/environment <<EOF
$INSERT_LABEL \

http_proxy=$HTTP_SCHEME_AUTHORITY
HTTP_PROXY=$HTTP_SCHEME_AUTHORITY
https_proxy=$HTTPS_SCHEME_AUTHORITY
HTTPS_PROXY=$HTTPS_SCHEME_AUTHORITY
ftp_proxy=$FTP_SCHEME_AUTHORITY
FTP_PROXY=$FTP_SCHEME_AUTHORITY
no_proxy=$NO_PROXY_HOST
NO_PROXY=$NO_PROXY_HOST
EOF
    fi
  fi

  if [ -e "$SHELLRC" ] && [ -n "$EDIT_SHELLRC" ] ; then
    log_note "clear proxy ➔ $SHELLRC"
    sed -i.bak \
      -e "/proxy_switch/Id" \
      -e "/http_proxy/Id" -e "/HTTP_PROXY/Id" \
      -e "/https_proxy/Id" -e "/HTTPS_PROXY/Id" \
      -e "/ftp_proxy/Id" -e "/FTP_PROXY/Id" \
      -e "/no_proxy/Id" -e "/NO_PROXY/Id" \
       $SHELLRC
    mv $SHELLRC.bak $BACKUP_DIR
    if [ $1 = "on" ]; then
      log_warning "set proxy ➔ $SHELLRC"
      tee -a $SHELLRC <<EOF
$INSERT_LABEL \

export http_proxy=$HTTP_SCHEME_AUTHORITY
export HTTP_PROXY=$HTTP_SCHEME_AUTHORITY
export https_proxy=$HTTPS_SCHEME_AUTHORITY
export HTTPS_PROXY=$HTTPS_SCHEME_AUTHORITY
export ftp_proxy=$FTP_SCHEME_AUTHORITY
export FTP_PROXY=$FTP_SCHEME_AUTHORITY
export no_proxy=$NO_PROXY_HOST
export NO_PROXY=$NO_PROXY_HOST
EOF
    fi
  fi

  if [ "$(command -v npm)" ] && [ -n "$EDIT_NPM" ]; then
    log_note "clear proxy ➔ npm"
    rm $BACKUP_DIR/npm_proxy_settings -f > /dev/null 2>&1
    npm -g config ls -l | grep "^proxy =" | tee -a $BACKUP_DIR/npm_proxy_settings >> /dev/null 2>&1
    npm -g config ls -l | grep "^registry =" | tee -a $BACKUP_DIR/npm_proxy_settings >> /dev/null 2>&1
    npm -g config delete proxy
    npm -g config set registry "https://registry.npmjs.org/"
    if [ $1 = "on" ]; then
      log_warning "set proxy ➔ npm"
      npm -g config set proxy "$HTTP_SCHEME_AUTHORITY"
      npm -g config set registry "http://registry.npmjs.org/"
    fi
  fi

fi
