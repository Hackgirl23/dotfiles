#########################################################
# add by user begin
#########################################################
# builtin-colorize
alias diff='diff --color=auto'
alias grep='grep --color=auto'
alias ls='ls --color=auto'
alias ip='ip --color=auto'

# builtin-overwrite
alias ll='ls -alF'
alias la='ls -a'
alias l='ls'
# builtin-utility
## cd
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
## search
alias 'psa'='ps ax'
alias 'lsofi'='lsof -i -P'
## git
alias g='git'
alias ga='git add'
alias gd='git diff'
alias gs='git status'
alias gp='git push'
alias gb='git branch'
alias gst='git status'
alias gco='git checkout'
alias gf='git fetch'
alias gc='git commit'
alias gcfg='git config'
alias gqp='git add . && git commit -m fix && git push'
alias gcop='git rev-parse --is-inside-git-dir > /dev/null 2>&1 \
  && git checkout $(git branch -a | grep -v "/HEAD" | fzf | sed -r "s#^\\s+remotes/origin/##" | sed -r "s#^\*\s+##")'
alias cdg='cd $(git rev-parse --show-toplevel)'  # cd to .git project root
## safety
alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -i'
## shell
alias reload='exec $SHELL -l'

# replace commands to modern cli tools
if [ "$(command -v exa)" ] && [ "$(exa --version)" ]; then
  ## ls, tree to exa
  alias exa='exa -a --time-style long-iso'
  alias ls='exa -a'
  alias tree='exa --tree'
fi
if [ "$(command -v bat)" ] && [ "$(bat --version)" ]; then
  ## cat, less to bat
  ### not working on glibc < 2.29
  alias cat='bat --color=always'
  alias less='bat --paging=always --color=always'
fi
if [ "$(command -v zoxide)" ] && [ "$(zoxide --version)" ]; then
  ## cd to z
  alias ..='z ..'
  alias ...='z ../..'
  alias ....='z ../../..'
  alias .....='z ../../../..'
  alias c='z'
  alias cd='z'
fi
if [ "$(command -v fzf)" ] && [ "$(fzf --version)" ]; then
  ## fzf
  ### common
  export FZF_DEFAULT_OPTS='--height 40% +s --multi --cycle --reverse --info=hidden --select-1 --exit-0'
  # fzf completion
  if [ -e "$HOME/.local/share/fzf/fzf-bash-completion.sh" ]; then
    . $HOME/.local/share/fzf/fzf-bash-completion.sh
    bind -x '"\t\t": fzf_bash_completion'
  fi
  ### history
  _fzf_search_history() {  ## Ctrl + r history search with fzf
  	local l=$(HISTTIMEFORMAT= history | \
  	sort -r | sed -E s/^\ *[0-9]\+\ \+// | \
  	fzf --query "$READLINE_LINE")
  	READLINE_LINE="$l"
  	READLINE_POINT=${#l}
  }
  bind -x '"\C-r": _fzf_search_history'
fi
if [ "$(command -v gojq)" ] && [ "$(gojq --version)" ]; then
  ## jq to gojq
  alias jq='gojq'
fi
if [ "$(command -v nvim)" ] && [ "$(nvim --version)" ]; then
  ## vim to nvim
  alias vim='nvim'
  alias vi='nvim'
fi

# cd from dir
cdd () {
  local path=$(fd -I --type directory --max-depth 3 . ${1:-.} | fzf)
  z ${path:?is empty} || true
}
# fuzzy command
## defined on $HOME/.bash_function
### edit
alias edit='fe'
alias editt='fe'
# ghq, hub
alias ghql='cd $(ghq root)/$(ghq list | fzf)'
alias ghqo='code $(cd $(ghq root)/$(ghq list | fzf) && pwd)'
alias ghqv='$(cd $(ghq root)/$(ghq list | fzf) && gh browse)'
# docker
alias dcu='docker-compose up -d'
alias dcd='docker-compose down'
alias dcr='docker-compose restart'
alias dp='docker ps'
alias dx='docker exec -it'
alias dr='docker run -it --rm=true'
# chezmoi ("dotfile")
alias dotf='chezmoi'
alias dotfile='chezmoi'
alias dotfcd='pushd $(chezmoi source-path) > /dev/null 2>&1 || exit'
alias dotfd='chezmoi diff'
# tmux
alias tm='tmux'
alias :vsp='tmux split-window -h'
alias :sp='tmux split-window -v'

{{ if and (lookPath "wsl.exe") (lookPath "powershell.exe") -}}
# WSL
## share clipboard
alias pbcopy='clip.exe'
alias pbpaste='powershell.exe -Command Get-Clipboard'
{{ end }}

#########################################################
# add by user end
#########################################################
