# !!! added
# builtin-colorize
alias diff='diff --color=auto'
alias grep='grep --color=auto'
alias ls='ls --color=auto'
alias ip='ip --color=auto'
# builtin-utility
## search
alias 'psa'='ps ax'
alias 'lsofi'='lsof -i -P'
## git
alias g='git'
alias ga='git add'
alias gd='git diff'
alias gs='git status'
alias gp='git push'
alias gb='git branch'
alias gst='git status'
alias gco='git checkout'
alias gf='git fetch'
alias gc='git commit'
alias gcfg='git config'
alias gqp='git add . && git commit -m fix && git push'
alias gcop='git rev-parse --is-inside-git-dir > /dev/null 2>&1 \
  && git checkout $(git branch -a | grep -v "/HEAD" | peco | sed -r "s#^\\s+remotes/origin/##" | sed -r "s#^\*\s+##")'
alias cdg='cd $(git rev-parse --show-toplevel)'  # cd to .git project root
## safety
alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -i'
## shell
alias reload='exec $SHELL -l'

# modern cli tools
## ls, tree to exa
if [ "$(command -v exa)" ]; then
  alias exa='exa -a -h -g'
  alias ls='exa -a -h -g'
  alias tree='exa --tree'
fi
## cat, less to bat
if [ "$(command -v bat)" ]; then
  alias cat='bat --paging=never'
  alias less='bat --paging=always'
fi
## cd to z
if [ "$(command -v zoxide)" ]; then
  alias ..='z ..'
  alias ...='z ../..'
  alias ....='z ../../..'
  alias .....='z ../../../..'
  alias c='z'
  # alias cd='z'  enhancd uses cd
fi
## find to fd
### disable because fd has less compatible with find
# if [ "$(command -v fd)" ]; then
#   alias find='fd'
# fi
## diff to delta
### disable because delta has less compatible with diff
# if [ "$(command -v delta)" ]; then
#   alias diff='delta'
# fi
## peco
if [ "$(command -v peco)" ]; then
  ### common
  alias p='peco --layout=bottom-up'
  alias peco='peco --layout=bottom-up'
  ### cd from dir
  cdfd () {
    local path=$(fd --type d  . ${1:-.} | peco)
    if [ ! -d ${path} ]; then
      echo "path is not a directory."
      return 1
    else
      z ${path:?path not found}
    fi
  }
  ### open file from dir
  opfd () {
    if [ -f "${1:-.}" ]; then code $1; return; fi
    local path=$(fd -I . ${1:-.} | peco)
    code ${path:?is empty} || true
  }
  ### copy path from dir
  pathfd () {
    fd -a . ${1:-.} | peco | pbcopy
  }
  ### history
  _peco_search_history() {  ## Ctrl + r history search with peco
  	local l=$(HISTTIMEFORMAT= history | \
  	sort -r | sed -E s/^\ *[0-9]\+\ \+// | \
  	peco --query "$READLINE_LINE")
  	READLINE_LINE="$l"
  	READLINE_POINT=${#l}
  }
  bind -x '"\C-r": _peco_search_history'
  ### singleline search
  ### https://kohkimakimoto.hatenablog.com/entry/2014/06/28/163412
  _peco_snippets() {
    if [ ! -e $HOME/.snippets ]; then
        echo "$HOME/.snippets is not found." >&2
        return 1
    fi
    local line
    line=$(grep -v -e "^#" -e "^ *$"  ~/.snippets | peco --query "$READLINE_LINE" | sed "s/^\[[^]]*\] *//g")
    READLINE_LINE="$line"
    READLINE_POINT=${#READLINE_LINE}
  }
  bind -x '"\C-x\C-x": _peco_snippets'
  ### ssh
  alias sshp='ssh $(grep -riE "^host[[:space:]]+[^*]" ~/.ssh/ --include="config"|peco|awk "{print \$2}")'
fi
## jq to gojq
if [ "$(command -v gojq)" ]; then
  alias jq='gojq'
fi

## ghq, hub
alias ghql='cd $(ghq root)/$(ghq list | peco)'
alias ghqo='code $(cd $(ghq root)/$(ghq list | peco) && pwd)'
alias ghqv='$(cd $(ghq root)/$(ghq list | peco) && gh browse)'

# docker
alias dcu='docker-compose up -d'
alias dcd='docker-compose down'
alias dcr='docker-compose restart'
alias dp='docker ps'
alias dx='docker exec -it'
alias dr='docker run -it --rm=true'
# chezmoi ("dotfile")
alias dotf='chezmoi'
alias dotfile='chezmoi'
alias dotfcd='pushd $(chezmoi source-path) > /dev/null 2>&1 || exit'
alias dotfd='chezmoi diff'

# WSL
## share clipboard
alias pbcopy='clip.exe'
alias pbpaste='powershell.exe -Command Get-Clipboard'

